// Code generated by MockGen. DO NOT EDIT.
// Source: application/contracts/repos.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/rvadym/hyperledger-fabric-test/domain"
	reflect "reflect"
)

// MockSaveItemRepoInterface is a mock of SaveItemRepoInterface interface.
type MockSaveItemRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSaveItemRepoInterfaceMockRecorder
}

// MockSaveItemRepoInterfaceMockRecorder is the mock recorder for MockSaveItemRepoInterface.
type MockSaveItemRepoInterfaceMockRecorder struct {
	mock *MockSaveItemRepoInterface
}

// NewMockSaveItemRepoInterface creates a new mock instance.
func NewMockSaveItemRepoInterface(ctrl *gomock.Controller) *MockSaveItemRepoInterface {
	mock := &MockSaveItemRepoInterface{ctrl: ctrl}
	mock.recorder = &MockSaveItemRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSaveItemRepoInterface) EXPECT() *MockSaveItemRepoInterfaceMockRecorder {
	return m.recorder
}

// SaveItem mocks base method.
func (m *MockSaveItemRepoInterface) SaveItem(item *domain.Item) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveItem", item)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveItem indicates an expected call of SaveItem.
func (mr *MockSaveItemRepoInterfaceMockRecorder) SaveItem(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveItem", reflect.TypeOf((*MockSaveItemRepoInterface)(nil).SaveItem), item)
}

// MockFetchItemsRepoInterface is a mock of FetchItemsRepoInterface interface.
type MockFetchItemsRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFetchItemsRepoInterfaceMockRecorder
}

// MockFetchItemsRepoInterfaceMockRecorder is the mock recorder for MockFetchItemsRepoInterface.
type MockFetchItemsRepoInterfaceMockRecorder struct {
	mock *MockFetchItemsRepoInterface
}

// NewMockFetchItemsRepoInterface creates a new mock instance.
func NewMockFetchItemsRepoInterface(ctrl *gomock.Controller) *MockFetchItemsRepoInterface {
	mock := &MockFetchItemsRepoInterface{ctrl: ctrl}
	mock.recorder = &MockFetchItemsRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFetchItemsRepoInterface) EXPECT() *MockFetchItemsRepoInterfaceMockRecorder {
	return m.recorder
}

// FetchItems mocks base method.
func (m *MockFetchItemsRepoInterface) FetchItems() ([]*domain.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchItems")
	ret0, _ := ret[0].([]*domain.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchItems indicates an expected call of FetchItems.
func (mr *MockFetchItemsRepoInterfaceMockRecorder) FetchItems() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchItems", reflect.TypeOf((*MockFetchItemsRepoInterface)(nil).FetchItems))
}
